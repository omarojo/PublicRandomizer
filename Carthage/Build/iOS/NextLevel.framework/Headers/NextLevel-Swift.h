// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import AVFoundation;
@import CoreMedia;
@import ObjectiveC;
@import CoreVideo;
@import Foundation;
@import CoreGraphics;
@import CoreAudio;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

@interface AVCaptureConnection (SWIFT_EXTENSION(NextLevel))
+ (AVCaptureConnection * _Nullable)connectionWithMediaType:(NSString * _Nonnull)mediaType fromConnections:(NSArray<AVCaptureConnection *> * _Nonnull)connections;
@end

@class AVCaptureDeviceFormat;

@interface AVCaptureDevice (SWIFT_EXTENSION(NextLevel))
+ (AVCaptureDevice * _Nullable)captureDeviceWithType:(AVCaptureDeviceType _Nonnull)deviceType forPosition:(AVCaptureDevicePosition)position;
+ (AVCaptureDevice * _Nullable)wideAngleVideoDeviceForPosition:(AVCaptureDevicePosition)position;
+ (AVCaptureDevice * _Nullable)telephotoVideoDeviceForPosition:(AVCaptureDevicePosition)position;
+ (AVCaptureDevice * _Nullable)primaryVideoDeviceForPosition:(AVCaptureDevicePosition)position;
+ (AVCaptureDevice * _Nullable)videoDevice;
+ (AVCaptureDevice * _Nullable)audioDevice;
+ (BOOL)isCaptureDeviceFormatInRange:(AVCaptureDeviceFormat * _Nonnull)format frameRate:(CMTimeScale)frameRate;
+ (BOOL)isCaptureDeviceFormatInRange:(AVCaptureDeviceFormat * _Nonnull)format frameRate:(CMTimeScale)frameRate dimensions:(CMVideoDimensions)dimensions;
@end

@class AVCaptureSession;

@interface AVCaptureDeviceInput (SWIFT_EXTENSION(NextLevel))
+ (AVCaptureDeviceInput * _Nullable)deviceInputWithMediaType:(NSString * _Nonnull)mediaType captureSession:(AVCaptureSession * _Nonnull)captureSession;
@end

@class AVCaptureVideoPreviewLayer;
@class NextLevelVideoConfiguration;
@class NextLevelAudioConfiguration;
@class NextLevelPhotoConfiguration;
@class NextLevelSession;

SWIFT_CLASS("_TtC9NextLevel9NextLevel")
@interface NextLevel : NSObject
@property (nonatomic, strong) AVCaptureVideoPreviewLayer * _Nonnull previewLayer;
@property (nonatomic, strong) NextLevelVideoConfiguration * _Nonnull videoConfiguration;
@property (nonatomic, strong) NextLevelAudioConfiguration * _Nonnull audioConfiguration;
@property (nonatomic, strong) NextLevelPhotoConfiguration * _Nonnull photoConfiguration;
@property (nonatomic) BOOL automaticallyConfiguresApplicationAudioSession;
@property (nonatomic) BOOL automaticallyUpdatesDeviceOrientation;
@property (nonatomic) BOOL photoStabilizationEnabled;
@property (nonatomic) BOOL isVideoCustomContextRenderingEnabled;
@property (nonatomic) CVPixelBufferRef _Nullable videoCustomContextImageBuffer;
@property (nonatomic, readonly) BOOL isRecording;
@property (nonatomic, readonly, strong) NextLevelSession * _Nullable session;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NextLevel * _Nonnull sharedInstance;)
+ (NextLevel * _Nonnull)sharedInstance;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class AVCaptureOutput;

@interface NextLevel (SWIFT_EXTENSION(NextLevel)) <AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureAudioDataOutputSampleBufferDelegate>
- (void)captureOutput:(AVCaptureOutput * _Null_unspecified)captureOutput didOutputSampleBuffer:(CMSampleBufferRef _Null_unspecified)sampleBuffer fromConnection:(AVCaptureConnection * _Null_unspecified)connection;
@end


@interface NextLevel (SWIFT_EXTENSION(NextLevel))
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end


@interface NextLevel (SWIFT_EXTENSION(NextLevel))
@end


@interface NextLevel (SWIFT_EXTENSION(NextLevel))
+ (NSDictionary<NSString *, id> * _Nonnull)tiffMetadata;
+ (NSDictionary<NSString *, id> * _Nullable)metadataFromSampleBufferWithSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer;
@end


@interface NextLevel (SWIFT_EXTENSION(NextLevel))
+ (CMTimeScale)maxFrameRateForFormat:(AVCaptureDeviceFormat * _Nonnull)format minFrameRate:(CMTimeScale)minFrameRate;
+ (uint64_t)availableStorageSpaceInBytes;
@end


@interface NextLevel (SWIFT_EXTENSION(NextLevel))
- (void)requestAuthorizationForMediaType:(NSString * _Nonnull)mediaType;
@end


@interface NextLevel (SWIFT_EXTENSION(NextLevel))
@property (nonatomic, readonly) BOOL canCapturePhoto;
- (void)capturePhoto;
@end


@interface NextLevel (SWIFT_EXTENSION(NextLevel))
@end

@class AVCapturePhotoOutput;
@class AVCaptureResolvedPhotoSettings;
@class AVCaptureBracketedStillImageSettings;

@interface NextLevel (SWIFT_EXTENSION(NextLevel)) <AVCapturePhotoCaptureDelegate>
- (void)captureOutput:(AVCapturePhotoOutput * _Nonnull)captureOutput willCapturePhotoForResolvedSettings:(AVCaptureResolvedPhotoSettings * _Nonnull)resolvedSettings;
- (void)captureOutput:(AVCapturePhotoOutput * _Nonnull)captureOutput didCapturePhotoForResolvedSettings:(AVCaptureResolvedPhotoSettings * _Nonnull)resolvedSettings;
- (void)captureOutput:(AVCapturePhotoOutput * _Nonnull)captureOutput didFinishProcessingPhotoSampleBuffer:(CMSampleBufferRef _Nullable)photoSampleBuffer previewPhotoSampleBuffer:(CMSampleBufferRef _Nullable)previewPhotoSampleBuffer resolvedSettings:(AVCaptureResolvedPhotoSettings * _Nonnull)resolvedSettings bracketSettings:(AVCaptureBracketedStillImageSettings * _Nullable)bracketSettings error:(NSError * _Nullable)error;
- (void)captureOutput:(AVCapturePhotoOutput * _Nonnull)captureOutput didFinishProcessingRawPhotoSampleBuffer:(CMSampleBufferRef _Nullable)rawSampleBuffer previewPhotoSampleBuffer:(CMSampleBufferRef _Nullable)previewPhotoSampleBuffer resolvedSettings:(AVCaptureResolvedPhotoSettings * _Nonnull)resolvedSettings bracketSettings:(AVCaptureBracketedStillImageSettings * _Nullable)bracketSettings error:(NSError * _Nullable)error;
- (void)captureOutput:(AVCapturePhotoOutput * _Nonnull)captureOutput didFinishCaptureForResolvedSettings:(AVCaptureResolvedPhotoSettings * _Nonnull)resolvedSettings error:(NSError * _Nullable)error;
@end


@interface NextLevel (SWIFT_EXTENSION(NextLevel))
@property (nonatomic, readonly) BOOL supportsVideoCapture;
@property (nonatomic, readonly) BOOL canCaptureVideo;
- (void)capturePhotoFromVideo;
- (void)record;
- (void)pause;
- (void)pauseWithCompletionHandler:(void (^ _Nullable)(void))completionHandler;
@end


@interface NextLevel (SWIFT_EXTENSION(NextLevel))
- (BOOL)startAndReturnError:(NSError * _Nullable * _Nullable)error;
- (void)stop;
@end


@interface NextLevel (SWIFT_EXTENSION(NextLevel))
@end


@interface NextLevel (SWIFT_EXTENSION(NextLevel))
- (void)freezePreview;
- (void)unfreezePreview;
@property (nonatomic, readonly) BOOL isFlashAvailable;
@property (nonatomic, readonly) BOOL isTorchAvailable;
@property (nonatomic, readonly) BOOL isFocusPointOfInterestSupported;
@property (nonatomic, readonly) BOOL isFocusLockSupported;
@property (nonatomic, readonly) BOOL isAdjustingFocus;
- (void)focusExposeAndAdjustWhiteBalanceAtAdjustedPoint:(CGPoint)adjustedPoint;
- (void)focusAtAdjustedPointOfInterestWithAdjustedPoint:(CGPoint)adjustedPoint;
@property (nonatomic, readonly) BOOL isExposureLockSupported;
@property (nonatomic, readonly) BOOL isAdjustingExposure;
- (void)exposeAtAdjustedPointOfInterestWithAdjustedPoint:(CGPoint)adjustedPoint;
@property (nonatomic) float videoZoomFactor;
@property (nonatomic) CMTimeScale frameRate;
- (void)updateDeviceFormatWithFrameRate:(CMTimeScale)frameRate dimensions:(CMVideoDimensions)dimensions;
- (void)flipCaptureDevicePosition;
@end


SWIFT_CLASS("_TtC9NextLevel22NextLevelConfiguration")
@interface NextLevelConfiguration : NSObject
@property (nonatomic, copy) NSString * _Nonnull preset;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable options;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (NSDictionary<NSString *, id> * _Nullable)avcaptureSettingsDictionaryWithSampleBuffer:(CMSampleBufferRef _Nullable)sampleBuffer;
@end


SWIFT_CLASS("_TtC9NextLevel27NextLevelAudioConfiguration")
@interface NextLevelAudioConfiguration : NextLevelConfiguration
@property (nonatomic) NSInteger bitRate;
@property (nonatomic) AudioFormatID format;
- (NSDictionary<NSString *, id> * _Nullable)avcaptureSettingsDictionaryWithSampleBuffer:(CMSampleBufferRef _Nullable)sampleBuffer;
@end

@class AVAsset;
@class UIImage;

SWIFT_CLASS("_TtC9NextLevel13NextLevelClip")
@interface NextLevelClip : NSObject
@property (nonatomic, copy) NSURL * _Nullable url;
@property (nonatomic, readonly) BOOL fileExists;
@property (nonatomic, readonly, strong) AVAsset * _Nullable asset;
@property (nonatomic, readonly) CMTime duration;
@property (nonatomic, readonly, strong) UIImage * _Nullable thumbnailImage;
@property (nonatomic, readonly, strong) UIImage * _Nullable lastFrameImage;
@property (nonatomic, readonly) float frameRate;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable infoDict;
+ (NSURL * _Nullable)clipURLWithFilename:(NSString * _Nonnull)filename directory:(NSString * _Nonnull)directory;
+ (NextLevelClip * _Nonnull)clipWithUrl:(NSURL * _Nullable)url infoDict:(NSDictionary<NSString *, id> * _Nullable)infoDict;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (void)removeFile;
- (NSDictionary<NSString *, id> * _Nullable)dictionaryRep;
@end



SWIFT_CLASS("_TtC9NextLevel27NextLevelPhotoConfiguration")
@interface NextLevelPhotoConfiguration : NextLevelConfiguration
@property (nonatomic, copy) NSString * _Nonnull codec;
@property (nonatomic) BOOL generateThumbnail;
- (NSDictionary<NSString *, id> * _Nullable)avcaptureDictionary;
@end


SWIFT_CLASS("_TtC9NextLevel16NextLevelSession")
@interface NextLevelSession : NSObject
@property (nonatomic, copy) NSString * _Nonnull outputDirectory;
@property (nonatomic, copy) NSString * _Nonnull fileType;
@property (nonatomic, copy) NSString * _Nonnull fileExtension;
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
@property (nonatomic, readonly, copy) NSDate * _Nonnull date;
@property (nonatomic, readonly, copy) NSURL * _Nullable url;
@property (nonatomic, readonly) BOOL isVideoReady;
@property (nonatomic, readonly) BOOL isAudioReady;
@property (nonatomic, readonly, copy) NSArray<NextLevelClip *> * _Nonnull clips;
@property (nonatomic, readonly) CMTime duration;
@property (nonatomic, readonly) BOOL isClipReady;
@property (nonatomic, readonly) BOOL clipStarted;
@property (nonatomic, readonly) CMTime currentClipDuration;
@property (nonatomic, readonly) BOOL currentClipHasVideo;
@property (nonatomic, readonly) BOOL currentClipHasAudio;
@property (nonatomic, readonly, strong) AVAsset * _Nullable asset;
@property (nonatomic, readonly) CVPixelBufferPoolRef _Nullable pixelBufferPool;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (BOOL)setupVideoWithSettings:(NSDictionary<NSString *, id> * _Nullable)settings configuration:(NextLevelVideoConfiguration * _Nonnull)configuration formatDescription:(CMFormatDescriptionRef _Nonnull)formatDescription;
- (BOOL)setupAudioWithSettings:(NSDictionary<NSString *, id> * _Nullable)settings configuration:(NextLevelAudioConfiguration * _Nonnull)configuration formatDescription:(CMFormatDescriptionRef _Nonnull)formatDescription;
@end


@interface NextLevelSession (SWIFT_EXTENSION(NextLevel))
@end


@interface NextLevelSession (SWIFT_EXTENSION(NextLevel))
@end


@interface NextLevelSession (SWIFT_EXTENSION(NextLevel))
@end


@interface NextLevelSession (SWIFT_EXTENSION(NextLevel))
- (void)appendVideoWithSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer imageBuffer:(CVPixelBufferRef _Nullable)imageBuffer minFrameDuration:(CMTime)minFrameDuration completionHandler:(SWIFT_NOESCAPE void (^ _Nonnull)(BOOL))completionHandler;
- (void)appendAudioWithSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer completionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
- (void)reset;
- (void)beginClip;
- (void)endClipWithCompletionHandler:(void (^ _Nullable)(NextLevelClip * _Nullable, NSError * _Nullable))completionHandler;
- (void)addWithClip:(NextLevelClip * _Nonnull)clip;
- (void)addWithClip:(NextLevelClip * _Nonnull)clip at:(NSInteger)idx;
- (void)removeWithClip:(NextLevelClip * _Nonnull)clip;
- (void)removeWithClipAt:(NSInteger)idx removeFile:(BOOL)removeFile;
- (void)removeAllClips;
- (void)removeAllClipsWithRemoveFiles:(BOOL)removeFiles;
- (void)removeLastClip;
- (void)mergeClipsUsingPreset:(NSString * _Nonnull)preset completionHandler:(void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable))completionHandler;
@end


SWIFT_CLASS("_TtC9NextLevel27NextLevelVideoConfiguration")
@interface NextLevelVideoConfiguration : NextLevelConfiguration
@property (nonatomic) NSInteger bitRate;
@property (nonatomic) CGAffineTransform transform;
@property (nonatomic, copy) NSString * _Nonnull codec;
@property (nonatomic, copy) NSString * _Nullable profileLevel;
@property (nonatomic, copy) NSString * _Nullable scalingMode;
- (NSDictionary<NSString *, id> * _Nullable)avcaptureSettingsDictionaryWithSampleBuffer:(CMSampleBufferRef _Nullable)sampleBuffer;
@end

#pragma clang diagnostic pop
